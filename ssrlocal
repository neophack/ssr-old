#!/bin/bash
root="$(cd $(dirname $(realpath ${BASH_SOURCE})) && pwd)"
cd "$root"

user=${SUDO_USER:-$(whoami)}
home=$(eval echo ~$user)

usage(){
    cat<<-EOF
	Usage: $(basename $0) CMD
	CMD:
	    start
	    stop
	    status
	    config
	    em
	    ping
	EOF
    exit 1
}

start(){
    #tmux new-session -d -s "ssr local" python ROOT/local.py -c ROOT/config-local.json
    case $(uname) in
        Linux)
            if (($EUID!=0));then
                sudo systemctl start ssrlocal
            else
                systemctl start ssrlocal
            fi
            ;;
        Darwin)
            launchctl load -w $home/Library/LaunchAgents/ssrlocal.plist
            ;;
    esac
}

stop(){
    #tmux kill-session -t "ssr local"
    case $(uname) in
        Linux)
            if (($EUID!=0));then
                sudo systemctl stop ssrlocal
            else
                systemctl stop ssrlocal
            fi
            ;;
        Darwin)
            launchctl unload -w $home/Library/LaunchAgents/ssrlocal.plist
            ;;
    esac
}

config(){
    editor=vi
    if command -v vim >/dev/null 2>&1;then
        editor=vim
    fi
    if [ ! -e $root/config-local.json ];then
        cp $root/config-local.json.example $root/config-local.json
    fi
    $editor $root/config-local.json
    #TODO restart if needed
}

ping(){
    server="$(python parseConfig.py server)"
    if [ -n "$server" ];then
        echo "Try to $(tput bold)ping$(tput sgr0) server: $(tput setaf 1)$server$(tput sgr0)..."
        /usr/bin/ping "$server"
    fi
}

editMyself(){
    editor=vi
    if command -v vim >/dev/null 2>&1;then
        editor=vim
    fi
    $editor $root/ssrlocal
}

status(){
    case $(uname) in
        Linux)
            systemctl status ssrlocal
            ;;
        Darwin)
            launchctl list | grep ssrlocal
            ;;
    esac
}

cmd=$1

case $cmd in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    config)
        config
        ;;
    em)
        editMyself
        ;;
    ping)
        ping
        ;;
    *)
        usage
        ;;
esac
